task two--->Blog website using full stack web development 

*Frontend (Client-side):*

HTML (index.html):
```
<!DOCTYPE html>
<html>
<head>
	<title>Blog Website</title>
	<link rel="stylesheet" href="styles.css">
</head>
<body>
	<header>
		<nav>
			<ul>
				<li><a href="/">Home</a></li>
				<li><a href="/blog">Blog</a></li>
				<li><a href="/about">About</a></li>
			</ul>
		</nav>
	</header>
	<main>
		<section id="blog-posts">
			<!-- Blog posts will be rendered here -->
		</section>
	</main>
	<script src="script.js"></script>
</body>
</html>
```
CSS (styles.css):
```
body {
	font-family: Arial, sans-serif;
	margin: 0;
	padding: 0;
}

header {
	background-color: #333;
	color: #fff;
	padding: 1em;
	text-align: center;
}

nav ul {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	justify-content: space-between;
}

nav li {
	margin-right: 20px;
}

nav a {
	color: #fff;
	text-decoration: none;
}

#blog-posts {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
}
```
JavaScript (script.js):
```
fetch('/api/blog-posts')
	.then(response => response.json())
	.then(data => {
		const blogPostsContainer = document.getElementById('blog-posts');
		data.forEach(post => {
			const postElement = document.createElement('div');
			postElement.innerHTML = `
				<h2>${post.title}</h2>
				<p>${post.content}</p>
			`;
			blogPostsContainer.appendChild(postElement);
		});
	});
```
*Backend (Server-side):*

Node.js (using Express.js):
```
const express = require('express');
const app = express();
const mongoose = require('mongoose');

mongoose.connect('mongodb://localhost/mydatabase', { useNewUrlParser: true, useUnifiedTopology: true });

const Post = mongoose.model('Post', {
	title: String,
	content: String,
});

app.get('/api/blog-posts', (req, res) => {
	Post.find()
		.then(posts => res.json(posts))
		.catch(err => res.status(500).send(err));
});

app.post('/api/blog-posts', (req, res) => {
	const { title, content } = req.body;
	const post = new Post({ title, content });
	post.save()
		.then(() => res.send({ message: 'Post created successfully!' }))
		.catch(err => res.status(500).send(err));
});

app.listen(3000, () => {
	console.log('Server listening on port 3000');
});
```
*Database (MongoDB):*